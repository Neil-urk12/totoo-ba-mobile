class SearchHistory {
  final String? id; // Optional - auto-generated by database
  final String userId;
  final String searchQuery;
  final String searchType; // 'text' or 'image'
  final int resultCount;
  final List<String> resultProductNames; // Simple list of product names from results
  final DateTime searchedAt;

  const SearchHistory({
    this.id,
    required this.userId,
    required this.searchQuery,
    required this.searchType,
    required this.resultCount,
    required this.resultProductNames,
    required this.searchedAt,
  });

  factory SearchHistory.fromMap(Map<String, dynamic> map) {
    return SearchHistory(
      id: map['id']?.toString() ?? '',
      userId: map['user_id'] ?? '',
      searchQuery: map['search_query'] ?? '',
      searchType: map['search_type'] ?? 'text',
      resultCount: map['result_count'] ?? 0,
      resultProductNames: map['result_product_names'] != null
          ? List<String>.from(map['result_product_names'])
          : [],
      searchedAt: map['searched_at'] is String
          ? DateTime.parse(map['searched_at'])
          : (map['searched_at'] as DateTime?) ?? DateTime.now(),
    );
  }

  Map<String, dynamic> toMap() {
    final map = {
      'user_id': userId,
      'search_query': searchQuery,
      'search_type': searchType,
      'result_count': resultCount,
      'result_product_names': resultProductNames,
      'searched_at': searchedAt.toIso8601String(),
    };
    
    // Only include id if it exists (for updates, not inserts)
    if (id != null) {
      map['id'] = id!;
    }
    
    return map;
  }

  SearchHistory copyWith({
    String? id,
    String? userId,
    String? searchQuery,
    String? searchType,
    int? resultCount,
    List<String>? resultProductNames,
    DateTime? searchedAt,
  }) {
    return SearchHistory(
      id: id ?? this.id,
      userId: userId ?? this.userId,
      searchQuery: searchQuery ?? this.searchQuery,
      searchType: searchType ?? this.searchType,
      resultCount: resultCount ?? this.resultCount,
      resultProductNames: resultProductNames ?? this.resultProductNames,
      searchedAt: searchedAt ?? this.searchedAt,
    );
  }
}
